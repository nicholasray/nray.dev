---
import { Icon } from "astro-icon";
---

<theme-toggle>
  <button
    class="block rounded-full p-3 hover:bg-zinc-100 dark:hover:bg-zinc-800 dark:hover:text-white"
  >
    <div class="theme-toggle-light dark:hidden">
      <Icon class="h-5 md:h-6" name="ph:sun" />
      <span class="sr-only">Toggle Dark Mode</span>
    </div>
    <div class="theme-toggle-dark hidden dark:block">
      <Icon class="h-5 md:h-6" name="ph:moon" />
      <span class="sr-only">Toggle Light Mode</span>
    </div>
  </button>
</theme-toggle>

<script>
  class ThemeToggle extends HTMLElement {
    metaTags: NodeListOf<HTMLMetaElement>;

    constructor() {
      super();

      this.handleSystemChange = this.handleSystemChange.bind(this);
      this.metaTags = document.head.querySelectorAll(
        ".meta-theme"
      ) as NodeListOf<HTMLMetaElement>;

      // Handle system theme changes.
      const mediaQueryList = window.matchMedia("(prefers-color-scheme: dark)");
      if (mediaQueryList.addEventListener) {
        mediaQueryList.addEventListener("change", this.handleSystemChange);
      } else {
        mediaQueryList.addListener(this.handleSystemChange);
      }

      // Handle theme toggle button clicks.
      const button = this.querySelector("button") as HTMLElement;
      button.addEventListener("click", () => {
        const isDark = document.documentElement.classList.contains("dark");

        if (isDark) {
          this.enableLightMode();
        } else {
          this.enableDarkMode();
        }
      });
    }

    handleSystemChange(e: MediaQueryListEvent) {
      if (e.matches) {
        this.enableDarkMode();
      } else {
        this.enableLightMode();
      }
    }

    toggleMeta() {
      for (var i = 0; i < this.metaTags.length; i++) {
        const meta = this.metaTags[i];
        const other = meta.dataset.other;
        meta.dataset.other = meta.content!;
        meta.content = other!;
      }
    }

    dispatchThemeChangeEvent() {
      const event = new Event("theme-change");
      document.documentElement.dispatchEvent(event);
    }

    persistTheme(theme: "light" | "dark") {
      localStorage.setItem("theme", theme);
    }

    enableLightMode() {
      document.documentElement.classList.remove("dark");
      this.toggleMeta();
      this.persistTheme("light");
      this.dispatchThemeChangeEvent();
    }

    enableDarkMode() {
      document.documentElement.classList.add("dark");
      this.toggleMeta();
      this.persistTheme("dark");
      this.dispatchThemeChangeEvent();
    }
  }

  customElements.define("theme-toggle", ThemeToggle);
</script>
