---
interface Props {
  slug: string;
}

const { slug } = Astro.props;
---

<span class="view-counter" data-slug={slug} data-increment>
  <slot />
</span>

<script>
  import { actions } from "astro:actions";

  async function showViews() {
    const counters = Array.from(
      document.querySelectorAll(".view-counter") as NodeListOf<HTMLSpanElement>
    );
    const countersBySlug = counters.reduce<
      Record<string, (typeof counters)[0]>
    >((data, counter) => {
      data[counter.dataset.slug!] = counter;
      return data;
    }, {});
    const slugs = counters.map((counter) => counter.dataset.slug!);

    const { data: posts, error } = await actions.views.getBySlugs({ slugs });

    if (error) {
      console.error(error);
      return;
    }

    return posts.forEach((post) => {
      countersBySlug[post.slug].innerText =
        `${post.viewCount.toLocaleString()} ${post.viewCount === 1 ? "view" : "views"}`;
    });
  }

  await showViews();
</script>
