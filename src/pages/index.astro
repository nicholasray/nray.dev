---
import Layout from "@layouts/Layout.astro";
import avatar from "@assets/images/avatar.jpg";
import ArticleFooter from "@components/ArticleFooter.astro";
import { getPosts } from "@src/api";
import Article from "@components/Article.astro";
import { Image } from "@components/Image/index.astro";
import styles from "./index.module.css";
const {
  main,
  heroSection,
  heroSectionInner,
  heroContainerOne,
  heroContainerTwo,
  heroTitle,
  heroBody,
  heroFooter,
  heroButton,
  heroImageLink,
  heroImage,
  sectionInner,
  about,
  aboutImage,
  aboutTitle,
  aboutBody,
  aboutFooter,
  aboutLink,
  recentlyPublishedTitle,
  recentlyPublishedPosts,
} = styles;

const posts = await getPosts();
const featured = posts.find((post) => post.data.featured) || posts[0];
const index = posts.indexOf(featured);
const restOfPosts = [...posts];
restOfPosts.splice(index, 1);
const title = "Nicholas Ray";
---

<Layout
  title={title}
  description="Web development tips that improve page speed, user happiness, and business success"
  openGraph={{
    basic: {
      title,
      type: "website",
      image: new URL("/avatar.jpg", Astro.url),
    },
    image: {
      alt: "Profile picture of Nicholas Ray",
      // Needed to prevent Astro SEO from outputting blank height tag.
      height: null,
    },
  }}
  twitter={{
    card: "summary_large_image",
  }}
>
  <main class={main}>
    <section class={heroSection}>
      <div class={heroSectionInner}>
        <div class={heroContainerOne}>
          <a href={featured.url} class={heroImageLink}>
            <Image
              class={heroImage}
              loading="eager"
              alt={featured.data.cover.alt}
              src={featured.data.cover}
              widths={[400, 800, 1200]}
              sizes="(min-width: 48rem) 37rem, 100vw"
              fetchpriority="high"
              style={featured.data.cover.position
                ? `object-position: ${featured.data.cover.position}`
                : undefined}
            />
          </a>
        </div>
        <div class={heroContainerTwo}>
          <article>
            <a href={featured.url}>
              <h1 class={heroTitle}>
                {featured.data.title}
              </h1>
            </a>
            <p class={heroBody}>
              {featured.data.description}
            </p>

            <footer class={heroFooter}>
              <ArticleFooter
                publishedAt={featured.data.publishedAt}
                readingTime={featured.readingTime}
              />
            </footer>
          </article>
          <a href={featured.url} class={heroButton}>Read article</a>
        </div>
      </div>
    </section>
    <section>
      <div class={sectionInner}>
        <div class={about}>
          <Image
            class={aboutImage}
            src={avatar}
            widths={[120, 240]}
            sizes="120px"
            alt="Avatar of Nicholas Ray"
          />
          <div>
            <h2 class={aboutTitle}>Hi! I'm Nicholas Ray.</h2>
            <p class={aboutBody}>
              I'm a front-end developer interested in web performance, elegant
              interfaces, and creating awesome user experiences.
            </p>
          </div>
        </div>
        <div class={aboutFooter}>
          <a class={aboutLink} href="/about/"> Learn more about me &rarr;</a>
        </div>
      </div>
    </section>
    <section>
      <div class={sectionInner}>
        <h2 class={recentlyPublishedTitle}>Recently Published</h2>
        <ul class={recentlyPublishedPosts}>
          {
            restOfPosts.map((post) => (
              <li>
                <Article post={post} />
              </li>
            ))
          }
        </ul>
      </div>
    </section>
  </main>
</Layout>
