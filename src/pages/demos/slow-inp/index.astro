---
import Layout from "@layouts/Layout.astro";
import * as Accordion from "@components/Accordion";
import { Icon } from "astro-icon";

const itemCount = 10;
---

<Layout
  title={"Slow Interaction to Next Paint (INP) Demo"}
  description="Web performance demo"
  noindex={true}
  nofollow={true}
>
  <main>
    <section class="mt-12 lg:mt-16">
      <div
        class="mx-auto max-w-7xl gap-16 md:grid md:grid-cols-2 px-4 sm:px-6 md:px-8"
      >
        <div>
          <h1
            class="text-4xl lg:text-5xl font-extrabold tracking-tight text-zinc-900 dark:text-white"
          >
            Slow Interaction to Next Paint (INP) demo
          </h1>
          <ul class="list-disc list-inside mt-8">
            <li>Up to 100ms of <strong>input delay</strong></li>
            <li>300ms of <strong>processing time</strong></li>
            <li>
              40,000 accordion items to ensure a slow <strong
                >presentation delay</strong
              >.
            </li>
          </ul>
        </div>
        <Accordion.Root
          className="divide-y dark:divide-zinc-700 shadow-xl text-zinc-600 dark:text-zinc-300 dark:zinc-200 bg-white dark:bg-zinc-800 rounded-md"
        >
          {
            [...Array(itemCount)].map((_, i) => (
              <Accordion.Item className="text-3xl divide-y dark:divide-zinc-700">
                <Accordion.Header as="h2">
                  <Accordion.Trigger
                    className="w-full p-4 font-mono cursor-pointer flex justify-between items-center"
                    key={i}
                  >
                    item {i + 1}
                    <Icon
                      name="heroicons:chevron-down"
                      class="chevron w-6 h-6 transition-transform duration-500"
                    />
                  </Accordion.Trigger>
                </Accordion.Header>
                <Accordion.Content
                  className="text-lg overflow-hidden hidden transition-[height] duration-500"
                  key={i}
                >
                  <div class="p-6">
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
                    do eiusmod tempor incididunt ut labore et dolore magna
                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation
                    ullamco laboris nisi ut aliquip ex ea commodo consequat.
                    Duis aute irure dolor in reprehenderit in voluptate velit
                    esse cillum dolore eu fugiat nulla pariatur. Excepteur sint
                    occaecat cupidatat non proident, sunt in culpa qui officia
                    deserunt mollit anim id est laborum.
                  </div>
                </Accordion.Content>
              </Accordion.Item>
            ))
          }
        </Accordion.Root>
      </div>
    </section>
  </main>
</Layout>

<style>
  .accordion-item--open .chevron {
    transform: rotate(-180deg);
  }

  .accordion-item--open .accordion-content {
    display: block;
    height: auto;
  }
</style>

<script>
  const processingTime = 300;
  function blockMainThread(duration: number) {
    const t0 = performance.now();
    while (performance.now() - t0 < duration);
  }

  function loop() {
    setTimeout(() => {
      blockMainThread(100);
      loop();
    });
  }

  const accordion = document.querySelector(".accordion")!;
  accordion.addEventListener("accordion-change", (e) => {
    // blockMainThread(processingTime);
  });

  // // loop();
</script>
